<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>perl on cat2koban.dev</title><link>https://cat2koban.dev/tags/perl/</link><description>Recent content in perl on cat2koban.dev</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 05 Apr 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://cat2koban.dev/tags/perl/index.xml" rel="self" type="application/rss+xml"/><item><title>Perl入学式というきっかけ</title><link>https://cat2koban.dev/posts/2018-04-05/</link><pubDate>Thu, 05 Apr 2018 00:00:00 +0000</pubDate><guid>https://cat2koban.dev/posts/2018-04-05/</guid><description>これは春のPerl入学式ブログリレー4日目の記事です。
昨日は id:anatofuz さんのエントリでした。
今後学習を支える基盤となる母国語が身につくなど，各地のサポーターを始めとするエンジニアコミュニティの一員になれるといったPerl入学式を完走するとできるようになることについて挙げられていました。
似たようなことになりますが今回，僕はPerl入学式をきっかけとしておきた出来事についてお話ししたいと思います。
エンジニアコミュニティへの参加 Perl入学式に参加したのをきっかけに，同級生の id:codehex くんに誘っていただき，Okinawa.pm という沖縄のPerl Mongerの集まるコミュニティに参加しました。
Okinawa.pm のブログがこちら -> Okinawa Perl Mongers
その当時，僕は実際に働いているエンジニアの人たちの集まりで，みなさん年齢も離れており，学生の僕がその場に馴染める雰囲気なのか....キッチリカッチリしていそう，怖い人とかいるのかな？など様々な不安がありました。
そんな不安をよそにまさかの開催場所は居酒屋。お酒を嗜みながら，PCを開いてLTを行うといったものでした。そして参加されていたエンジニアの皆さんも優しい方ばかりで，Perlというプログラム言語には，こういうモジュールを公開しているサイトがあるんだよ！など，色んなことを教えてくれました。
そして日が経ち，そのコミュニティで僕はLTをする機会もありました。
その時のスライドがこちら 👇
Okinawapm#4 from cat2koban www.slideshare.net 人前に出て発表を苦手としていた僕はいつのまにか，地域のエンジニアコミュニティで発表をしていました。
考えてみると僕はPerl入学式に参加したことをきっかけに，こうやって地域のエンジニアコミュニティに参加したり，他の勉強会にも興味を持って参加したり，カンファレンスとよばれる，エンジニアの技術トークを行う大きなイベントにも足を運んだりと，興味が興味を呼んで色々と行動を起こすようになりました。行動を起こすようになり，エンジニアとの繋がりも増え，僕が悩んだり，困ったりした時に一緒になって考えてくれる大学の友達も作ることができ，共に技術を高め合う仲間も見つけることができました。ちなみに昨日のエントリを書いた id:anatofuz さんはPerl入学式をきっかけに彼女ができたようです。　今ではコミュニティメンバーの1人の，ホテルシステムの開発，研究を行っている企業の社員さんにお声がけをしていただき，アルバイトエンジニアとしてお仕事に携わることができています。Perl入学式で学んだプログラミングを，今はお仕事で活用できています。プログラミングを学ぶPerl入学式という機会があったからこそ，今の僕があると思っています。(唐突な無理矢理感)
あなたもPerl入学式をきっかけに，プログラミングをはじめてみませんか？
明日は, @uniuni_sea さんです，お楽しみに٩( ᐛ )و</description></item><item><title>Shell Scriptで書かれた作業時間管理ツールをPerlに書き直す (序章)</title><link>https://cat2koban.dev/posts/2017-12-20/</link><pubDate>Wed, 20 Dec 2017 00:00:00 +0000</pubDate><guid>https://cat2koban.dev/posts/2017-12-20/</guid><description>これはPerl Advent Calender 2017 20日目の記事です。
広告
YAPC::Okinawaは現在，カンファレンス参加チケット・トークプロポーザルを絶賛募集中です！
yapcjapan.org
この広告は，90日以上更新されていないブログにのみなんちゃらかんちゃr
はじめに
普段は南の島の大学の4年生やってます。絶賛卒業研kうっ...頭が..(ノートはここで途切れているようだ...)
よくバイトや研究をしていて，作業の開始時間と終了時間を簡単に記録できたらいいななんて思うことがありました。
Terminalで簡単に管理できる作業時間ツールでも作るか，と意気込んでいたその時。
タイミングよく友人がShell Scriptでそのツールを書いていたので，勉強がてらそれをPerlに書き直すことにしようと決めました(┐「ε:)
友人の作成した作業時間管理ツールがこちら。
github.com
checkは研究時間を記録するために作られました。基本的な使い方は指定したプロジェクトにcheck-in, check-outをするというシンプルな機能です。複数のプロジェクトに対応しているので毎日の活動を記録するのに最適です。check-inした後もバックグラウンドで動いていないのでコンピュータを再起動したりしても問題ありません。
ふむふむ，すごい(語彙ry..
Perlへ移行
僕がPerlで書き直す上で年内に移行したい機能たち
check man
使い方を表示してくれる help みたいなもの
check in &amp;lt;project_name>
作業時間の記録を開始。
check out
作業時間の記録を終了。
今回は序章ということもあり(ｵｲｵｲ...)，項目1. check manまでの移行に関してまで書きます。
生暖かい目で見守っていただけますと幸いです。
manオプションの移行
書き直す前のShell Scriptではこんな感じ
- 受け取ったオプションを if 文で分岐かけてそれぞれの処理に流す感じ。
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 main() { #$1がないなら終了する check_nonactive $1 #コマンドの実行環境の確認 check_database #$HOME/checkに移動する(( )) cd $dirpath #実行状態の確認 if [ $1 = &amp;#34;in&amp;#34; ] ; then check_in $1 $2 elif [ $1 = &amp;#34;out&amp;#34; ] ; then check_out ~~ 省略 ~~ elif [ $1 = &amp;#34;man&amp;#34; ] ; then check_man fi #元のディレクトリに移動する cd - &amp;gt; /dev/null } main $1 $2 $3 ひとまず，terminal上で check &amp;lt;オプション> てな感じでやりたい。
モジュールを自分で作って使ってみたいなとか考えて，Shell で書かれたものとは違うファイル構成にしました。下図がその構成
CLI/ 以下にIN, OUT, Man, etc.</description></item></channel></rss>